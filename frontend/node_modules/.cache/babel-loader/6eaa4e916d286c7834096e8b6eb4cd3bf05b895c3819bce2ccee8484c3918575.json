{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request logging\nAPI.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response logging\nAPI.interceptors.response.use(response => {\n  console.log(`API Response: ${response.status}`, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error(`API Error: ${(_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status}`, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  return Promise.reject(error);\n});\n\n// Add the missing functions here:\nexport const healthCheck = () => {\n  console.log('🏥 Checking API health...');\n  return API.get('/health');\n};\nexport const getAllCourses = () => {\n  console.log('📚 Fetching all courses...');\n  return API.get('/courses');\n};\n\n// Your existing exports...\nexport const getGuestDashboard = () => API.get('/guest/dashboard');\nexport const searchReports = query => API.get(`/guest/search?query=${query}`);\nexport const login = userData => API.post('/auth/login', userData);\nexport const register = userData => API.post('/auth/register', userData);\n\n// Student endpoints\nexport const getStudentMonitoring = studentId => {\n  console.log('Fetching student monitoring for:', studentId);\n  return API.get(`/student/monitoring/${studentId}`);\n};\nexport const submitRating = ratingData => {\n  console.log('Submitting rating:', ratingData);\n  return API.post('/student/rating', ratingData);\n};\nexport const getStudentRatings = studentId => {\n  console.log('Fetching student ratings for:', studentId);\n  return API.get(`/student/ratings/${studentId}`);\n};\nexport const getStudentEnrollments = studentId => {\n  console.log('Fetching student enrollments for:', studentId);\n  return API.get(`/student/enrollments/${studentId}`);\n};\n\n// Lecturer endpoints\nexport const getLecturerClasses = lecturerId => API.get(`/lecturer/classes/${lecturerId}`);\nexport const getLecturerReports = lecturerId => API.get(`/lecturer/reports/${lecturerId}`);\nexport const submitReport = reportData => API.post('/lecturer/reports', reportData);\nexport const getLecturerMonitoring = lecturerId => API.get(`/lecturer/monitoring/${lecturerId}`);\nexport const getLecturerRatings = lecturerId => API.get(`/lecturer/ratings/${lecturerId}`);\nexport const getLecturerAssignedClasses = lecturerId => API.get(`/lecturer/assigned-classes/${lecturerId}`);\n\n// PRL endpoints\nexport const getPRLCourses = prlId => API.get(`/prl/courses/${prlId}`);\nexport const getPRLReports = prlId => API.get(`/prl/reports/${prlId}`);\nexport const addFeedback = feedbackData => API.post('/prl/feedback', feedbackData);\nexport const getPRLMonitoring = prlId => API.get(`/prl/monitoring/${prlId}`);\n\n// PL endpoints\nexport const getPLCourses = () => API.get('/pl/courses');\nexport const addCourse = courseData => API.post('/pl/courses', courseData);\nexport const assignLecturer = assignmentData => API.post('/pl/assign-lecturer', assignmentData);\nexport const getPLReports = () => API.get('/pl/reports');\nexport const getPLLecturers = () => API.get('/pl/lecturers');\nexport const getPLClasses = () => API.get('/pl/classes');\nexport const assignClassToLecturer = assignmentData => API.post('/pl/assign-class', assignmentData);\n\n// Enrollment endpoints\nexport const getAvailableClasses = () => API.get('/enrollments/available-classes');\nexport const enrollStudent = enrollmentData => API.post('/enrollments/enroll', enrollmentData);\nexport const unenrollStudent = enrollmentId => API.delete(`/enrollments/enroll/${enrollmentId}`);\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","token","localStorage","getItem","Authorization","response","status","data","error","_error$response","_error$response2","Promise","reject","healthCheck","get","getAllCourses","getGuestDashboard","searchReports","query","login","userData","post","register","getStudentMonitoring","studentId","submitRating","ratingData","getStudentRatings","getStudentEnrollments","getLecturerClasses","lecturerId","getLecturerReports","submitReport","reportData","getLecturerMonitoring","getLecturerRatings","getLecturerAssignedClasses","getPRLCourses","prlId","getPRLReports","addFeedback","feedbackData","getPRLMonitoring","getPLCourses","addCourse","courseData","assignLecturer","assignmentData","getPLReports","getPLLecturers","getPLClasses","assignClassToLecturer","getAvailableClasses","enrollStudent","enrollmentData","unenrollStudent","enrollmentId","delete"],"sources":["C:/Users/USER/MPHOFE/lecturer-reporting-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ \r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request logging\r\nAPI.interceptors.request.use((config) => {\r\n  console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response logging\r\nAPI.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`API Response: ${response.status}`, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(`API Error: ${error.response?.status}`, error.response?.data);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add the missing functions here:\r\nexport const healthCheck = () => {\r\n  console.log('🏥 Checking API health...');\r\n  return API.get('/health');\r\n};\r\n\r\nexport const getAllCourses = () => {\r\n  console.log('📚 Fetching all courses...');\r\n  return API.get('/courses');\r\n};\r\n\r\n// Your existing exports...\r\nexport const getGuestDashboard = () => API.get('/guest/dashboard');\r\nexport const searchReports = (query) => API.get(`/guest/search?query=${query}`);\r\nexport const login = (userData) => API.post('/auth/login', userData);\r\nexport const register = (userData) => API.post('/auth/register', userData);\r\n\r\n// Student endpoints\r\nexport const getStudentMonitoring = (studentId) => {\r\n  console.log('Fetching student monitoring for:', studentId);\r\n  return API.get(`/student/monitoring/${studentId}`);\r\n};\r\nexport const submitRating = (ratingData) => {\r\n  console.log('Submitting rating:', ratingData);\r\n  return API.post('/student/rating', ratingData);\r\n};\r\nexport const getStudentRatings = (studentId) => {\r\n  console.log('Fetching student ratings for:', studentId);\r\n  return API.get(`/student/ratings/${studentId}`);\r\n};\r\nexport const getStudentEnrollments = (studentId) => {\r\n  console.log('Fetching student enrollments for:', studentId);\r\n  return API.get(`/student/enrollments/${studentId}`);\r\n};\r\n\r\n// Lecturer endpoints\r\nexport const getLecturerClasses = (lecturerId) => API.get(`/lecturer/classes/${lecturerId}`);\r\nexport const getLecturerReports = (lecturerId) => API.get(`/lecturer/reports/${lecturerId}`);\r\nexport const submitReport = (reportData) => API.post('/lecturer/reports', reportData);\r\nexport const getLecturerMonitoring = (lecturerId) => API.get(`/lecturer/monitoring/${lecturerId}`);\r\nexport const getLecturerRatings = (lecturerId) => API.get(`/lecturer/ratings/${lecturerId}`);\r\nexport const getLecturerAssignedClasses = (lecturerId) => API.get(`/lecturer/assigned-classes/${lecturerId}`);\r\n\r\n// PRL endpoints\r\nexport const getPRLCourses = (prlId) => API.get(`/prl/courses/${prlId}`);\r\nexport const getPRLReports = (prlId) => API.get(`/prl/reports/${prlId}`);\r\nexport const addFeedback = (feedbackData) => API.post('/prl/feedback', feedbackData);\r\nexport const getPRLMonitoring = (prlId) => API.get(`/prl/monitoring/${prlId}`);\r\n\r\n// PL endpoints\r\nexport const getPLCourses = () => API.get('/pl/courses');\r\nexport const addCourse = (courseData) => API.post('/pl/courses', courseData);\r\nexport const assignLecturer = (assignmentData) => API.post('/pl/assign-lecturer', assignmentData);\r\nexport const getPLReports = () => API.get('/pl/reports');\r\nexport const getPLLecturers = () => API.get('/pl/lecturers');\r\nexport const getPLClasses = () => API.get('/pl/classes');\r\nexport const assignClassToLecturer = (assignmentData) => API.post('/pl/assign-class', assignmentData);\r\n\r\n// Enrollment endpoints\r\nexport const getAvailableClasses = () => API.get('/enrollments/available-classes');\r\nexport const enrollStudent = (enrollmentData) => API.post('/enrollments/enroll', enrollmentData);\r\nexport const unenrollStudent = (enrollmentId) => API.delete(`/enrollments/enroll/${enrollmentId}`);\r\n\r\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}