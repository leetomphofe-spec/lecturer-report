{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Guest endpoints\nexport const getGuestDashboard = () => API.get('/guest/dashboard');\nexport const searchReports = query => API.get(`/guest/search?query=${query}`);\n\n// Auth endpoints\nexport const login = userData => API.post('/auth/login', userData);\nexport const register = userData => API.post('/auth/register', userData);\n\n// Student endpoints\nexport const getStudentMonitoring = studentId => API.get(`/student/monitoring/${studentId}`);\nexport const submitRating = ratingData => API.post('/student/rating', ratingData);\nexport const getStudentRatings = studentId => API.get(`/student/ratings/${studentId}`);\n\n// Lecturer endpoints\nexport const getLecturerClasses = lecturerId => API.get(`/lecturer/classes/${lecturerId}`);\nexport const getLecturerReports = lecturerId => API.get(`/lecturer/reports/${lecturerId}`);\nexport const submitReport = reportData => API.post('/lecturer/reports', reportData);\nexport const getLecturerMonitoring = lecturerId => API.get(`/lecturer/monitoring/${lecturerId}`);\nexport const getLecturerRatings = lecturerId => API.get(`/lecturer/ratings/${lecturerId}`);\n\n// PRL endpoints\nexport const getPRLCourses = prlId => API.get(`/prl/courses/${prlId}`);\nexport const getPRLReports = prlId => API.get(`/prl/reports/${prlId}`);\nexport const addFeedback = feedbackData => API.post('/prl/feedback', feedbackData);\nexport const getPRLMonitoring = prlId => API.get(`/prl/monitoring/${prlId}`);\n\n// PL endpoints\nexport const getPLCourses = () => API.get('/pl/courses');\nexport const addCourse = courseData => API.post('/pl/courses', courseData);\nexport const assignLecturer = assignmentData => API.post('/pl/assign-lecturer', assignmentData);\nexport const getPLReports = () => API.get('/pl/reports');\nexport const getPLLecturers = () => API.get('/pl/lecturers');\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","getGuestDashboard","get","searchReports","query","login","userData","post","register","getStudentMonitoring","studentId","submitRating","ratingData","getStudentRatings","getLecturerClasses","lecturerId","getLecturerReports","submitReport","reportData","getLecturerMonitoring","getLecturerRatings","getPRLCourses","prlId","getPRLReports","addFeedback","feedbackData","getPRLMonitoring","getPLCourses","addCourse","courseData","assignLecturer","assignmentData","getPLReports","getPLLecturers"],"sources":["C:/Users/USER/MPHOFE/lecturer-reporting-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ \r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add token to requests\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Guest endpoints\r\nexport const getGuestDashboard = () => API.get('/guest/dashboard');\r\nexport const searchReports = (query) => API.get(`/guest/search?query=${query}`);\r\n\r\n// Auth endpoints\r\nexport const login = (userData) => API.post('/auth/login', userData);\r\nexport const register = (userData) => API.post('/auth/register', userData);\r\n\r\n// Student endpoints\r\nexport const getStudentMonitoring = (studentId) => API.get(`/student/monitoring/${studentId}`);\r\nexport const submitRating = (ratingData) => API.post('/student/rating', ratingData);\r\nexport const getStudentRatings = (studentId) => API.get(`/student/ratings/${studentId}`);\r\n\r\n// Lecturer endpoints\r\nexport const getLecturerClasses = (lecturerId) => API.get(`/lecturer/classes/${lecturerId}`);\r\nexport const getLecturerReports = (lecturerId) => API.get(`/lecturer/reports/${lecturerId}`);\r\nexport const submitReport = (reportData) => API.post('/lecturer/reports', reportData);\r\nexport const getLecturerMonitoring = (lecturerId) => API.get(`/lecturer/monitoring/${lecturerId}`);\r\nexport const getLecturerRatings = (lecturerId) => API.get(`/lecturer/ratings/${lecturerId}`);\r\n\r\n// PRL endpoints\r\nexport const getPRLCourses = (prlId) => API.get(`/prl/courses/${prlId}`);\r\nexport const getPRLReports = (prlId) => API.get(`/prl/reports/${prlId}`);\r\nexport const addFeedback = (feedbackData) => API.post('/prl/feedback', feedbackData);\r\nexport const getPRLMonitoring = (prlId) => API.get(`/prl/monitoring/${prlId}`);\r\n\r\n// PL endpoints\r\nexport const getPLCourses = () => API.get('/pl/courses');\r\nexport const addCourse = (courseData) => API.post('/pl/courses', courseData);\r\nexport const assignLecturer = (assignmentData) => API.post('/pl/assign-lecturer', assignmentData);\r\nexport const getPLReports = () => API.get('/pl/reports');\r\nexport const getPLLecturers = () => API.get('/pl/lecturers');\r\n\r\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}