{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with better configuration\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000,\n  // 10 second timeout\n  withCredentials: true // Include cookies in requests\n});\n\n// Request interceptor with enhanced logging\nAPI.interceptors.request.use(config => {\n  var _config$method;\n  const timestamp = new Date().toISOString();\n  console.log(`🚀 [${timestamp}] API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, config.params || '');\n  const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Add cache busting for GET requests\n  if (config.method === 'get') {\n    config.params = {\n      ...config.params,\n      _t: Date.now() // Cache buster\n    };\n  }\n  return config;\n}, error => {\n  console.error('❌ Request Interceptor Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor with enhanced error handling\nAPI.interceptors.response.use(response => {\n  console.log(`✅ API Success: ${response.status} ${response.config.url}`, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response$data, _error$response2, _error$config, _error$response3, _error$response4;\n  const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message;\n  const status = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status;\n  console.error(`❌ API Error ${status}: ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url}`, {\n    message: errorMessage,\n    status: status,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n  });\n\n  // Handle specific HTTP status codes\n  if (status === 401) {\n    console.warn('🛑 Authentication failed, redirecting to login...');\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    window.location.href = '/login';\n  } else if (status === 403) {\n    console.warn('⛔ Access forbidden');\n  } else if (status === 404) {\n    console.warn('🔍 Resource not found');\n  } else if (status >= 500) {\n    console.error('🔥 Server error occurred');\n  }\n  return Promise.reject({\n    message: errorMessage,\n    status: status,\n    data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n    originalError: error\n  });\n});\n\n// Generic API call function with retry logic\nconst apiCallWithRetry = async (apiCall, maxRetries = 2, delay = 1000) => {\n  for (let attempt = 1; attempt <= maxRetries + 1; attempt++) {\n    try {\n      return await apiCall();\n    } catch (error) {\n      if (attempt > maxRetries) {\n        throw error;\n      }\n      console.warn(`🔄 Attempt ${attempt} failed, retrying in ${delay}ms...`);\n      await new Promise(resolve => setTimeout(resolve, delay * attempt));\n    }\n  }\n};\n\n// Guest endpoints\nexport const getGuestDashboard = () => apiCallWithRetry(() => API.get('/guest/dashboard'));\nexport const searchReports = query => apiCallWithRetry(() => API.get(`/guest/search?query=${encodeURIComponent(query)}`));\n\n// Auth endpoints\nexport const login = userData => apiCallWithRetry(() => API.post('/auth/login', userData));\nexport const register = userData => apiCallWithRetry(() => API.post('/auth/register', userData));\nexport const logout = () => apiCallWithRetry(() => API.post('/auth/logout'));\n\n// Student endpoints with enhanced error handling\nexport const getStudentMonitoring = studentId => {\n  console.log('🎓 Fetching student monitoring for:', studentId);\n  return apiCallWithRetry(() => API.get(`/students/${studentId}/monitoring`));\n};\nexport const submitRating = ratingData => {\n  console.log('⭐ Submitting rating:', ratingData);\n  return apiCallWithRetry(() => API.post('/students/ratings', ratingData));\n};\nexport const getStudentRatings = studentId => {\n  console.log('📊 Fetching student ratings for:', studentId);\n  return apiCallWithRetry(() => API.get(`/students/${studentId}/ratings`));\n};\nexport const getStudentEnrollments = studentId => {\n  console.log('📚 Fetching student enrollments for:', studentId);\n  return apiCallWithRetry(() => API.get(`/students/${studentId}/enrollments`));\n};\n\n// Real-time functionality\nexport const subscribeToReports = (studentId, callback) => {\n  console.log('🔔 Setting up real-time subscription for student:', studentId);\n\n  // WebSocket implementation\n  if (typeof WebSocket !== 'undefined') {\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsUrl = `${protocol}//${window.location.host}/ws/students/${studentId}/reports`;\n    const ws = new WebSocket(wsUrl);\n    ws.onopen = () => {\n      console.log('✅ WebSocket connected for real-time updates');\n    };\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === 'new_report') {\n          callback(data.report);\n        }\n      } catch (error) {\n        console.error('❌ Error parsing WebSocket message:', error);\n      }\n    };\n    ws.onerror = error => {\n      console.error('❌ WebSocket error:', error);\n    };\n    ws.onclose = () => {\n      console.log('🔌 WebSocket disconnected');\n    };\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) {\n        ws.close();\n      }\n    };\n  }\n\n  // Fallback to Server-Sent Events\n  const eventSource = new EventSource(`/api/students/${studentId}/reports/stream`);\n  eventSource.onmessage = event => {\n    try {\n      const newReport = JSON.parse(event.data);\n      callback(newReport);\n    } catch (error) {\n      console.error('❌ Error parsing SSE data:', error);\n    }\n  };\n  eventSource.onerror = error => {\n    console.error('❌ SSE error:', error);\n    eventSource.close();\n  };\n  return () => eventSource.close();\n};\n\n// Lecturer endpoints\nexport const getLecturerClasses = lecturerId => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/classes`));\nexport const getLecturerReports = lecturerId => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/reports`));\nexport const submitReport = reportData => apiCallWithRetry(() => API.post('/lecturers/reports', reportData));\nexport const getLecturerMonitoring = lecturerId => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/monitoring`));\nexport const getLecturerRatings = lecturerId => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/ratings`));\nexport const getLecturerAssignedClasses = lecturerId => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/assigned-classes`));\n\n// PRL endpoints\nexport const getPRLCourses = prlId => apiCallWithRetry(() => API.get(`/prl/${prlId}/courses`));\nexport const getPRLReports = prlId => apiCallWithRetry(() => API.get(`/prl/${prlId}/reports`));\nexport const addFeedback = feedbackData => apiCallWithRetry(() => API.post('/prl/feedback', feedbackData));\nexport const getPRLMonitoring = prlId => apiCallWithRetry(() => API.get(`/prl/${prlId}/monitoring`));\n\n// PL endpoints\nexport const getPLCourses = () => apiCallWithRetry(() => API.get('/pl/courses'));\nexport const addCourse = courseData => apiCallWithRetry(() => API.post('/pl/courses', courseData));\nexport const assignLecturer = assignmentData => apiCallWithRetry(() => API.post('/pl/assign-lecturer', assignmentData));\nexport const getPLReports = () => apiCallWithRetry(() => API.get('/pl/reports'));\nexport const getPLLecturers = () => apiCallWithRetry(() => API.get('/pl/lecturers'));\nexport const getPLClasses = () => apiCallWithRetry(() => API.get('/pl/classes'));\nexport const assignClassToLecturer = assignmentData => apiCallWithRetry(() => API.post('/pl/assign-class', assignmentData));\n\n// Enrollment endpoints\nexport const getAvailableClasses = () => apiCallWithRetry(() => API.get('/enrollments/available-classes'));\nexport const enrollStudent = enrollmentData => apiCallWithRetry(() => API.post('/enrollments/enroll', enrollmentData));\nexport const unenrollStudent = enrollmentId => apiCallWithRetry(() => API.delete(`/enrollments/${enrollmentId}`));\n\n// Utility functions\nexport const healthCheck = () => apiCallWithRetry(() => API.get('/health'));\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","headers","timeout","withCredentials","interceptors","request","use","config","_config$method","timestamp","Date","toISOString","console","log","method","toUpperCase","url","params","token","localStorage","getItem","sessionStorage","Authorization","_t","now","error","Promise","reject","response","status","data","_error$response","_error$response$data","_error$response2","_error$config","_error$response3","_error$response4","errorMessage","message","warn","removeItem","window","location","href","originalError","apiCallWithRetry","apiCall","maxRetries","delay","attempt","resolve","setTimeout","getGuestDashboard","get","searchReports","query","encodeURIComponent","login","userData","post","register","logout","getStudentMonitoring","studentId","submitRating","ratingData","getStudentRatings","getStudentEnrollments","subscribeToReports","callback","WebSocket","protocol","wsUrl","host","ws","onopen","onmessage","event","JSON","parse","type","report","onerror","onclose","readyState","OPEN","close","eventSource","EventSource","newReport","getLecturerClasses","lecturerId","getLecturerReports","submitReport","reportData","getLecturerMonitoring","getLecturerRatings","getLecturerAssignedClasses","getPRLCourses","prlId","getPRLReports","addFeedback","feedbackData","getPRLMonitoring","getPLCourses","addCourse","courseData","assignLecturer","assignmentData","getPLReports","getPLLecturers","getPLClasses","assignClassToLecturer","getAvailableClasses","enrollStudent","enrollmentData","unenrollStudent","enrollmentId","delete","healthCheck"],"sources":["C:/Users/USER/MPHOFE/lecturer-reporting-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with better configuration\r\nconst API = axios.create({ \r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 10000, // 10 second timeout\r\n  withCredentials: true // Include cookies in requests\r\n});\r\n\r\n// Request interceptor with enhanced logging\r\nAPI.interceptors.request.use((config) => {\r\n  const timestamp = new Date().toISOString();\r\n  console.log(`🚀 [${timestamp}] API Request: ${config.method?.toUpperCase()} ${config.url}`, config.params || '');\r\n  \r\n  const token = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  \r\n  // Add cache busting for GET requests\r\n  if (config.method === 'get') {\r\n    config.params = {\r\n      ...config.params,\r\n      _t: Date.now() // Cache buster\r\n    };\r\n  }\r\n  \r\n  return config;\r\n}, (error) => {\r\n  console.error('❌ Request Interceptor Error:', error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Response interceptor with enhanced error handling\r\nAPI.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`✅ API Success: ${response.status} ${response.config.url}`, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const errorMessage = error.response?.data?.message || error.message;\r\n    const status = error.response?.status;\r\n    \r\n    console.error(`❌ API Error ${status}: ${error.config?.url}`, {\r\n      message: errorMessage,\r\n      status: status,\r\n      data: error.response?.data\r\n    });\r\n    \r\n    // Handle specific HTTP status codes\r\n    if (status === 401) {\r\n      console.warn('🛑 Authentication failed, redirecting to login...');\r\n      localStorage.removeItem('token');\r\n      sessionStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    } else if (status === 403) {\r\n      console.warn('⛔ Access forbidden');\r\n    } else if (status === 404) {\r\n      console.warn('🔍 Resource not found');\r\n    } else if (status >= 500) {\r\n      console.error('🔥 Server error occurred');\r\n    }\r\n    \r\n    return Promise.reject({\r\n      message: errorMessage,\r\n      status: status,\r\n      data: error.response?.data,\r\n      originalError: error\r\n    });\r\n  }\r\n);\r\n\r\n// Generic API call function with retry logic\r\nconst apiCallWithRetry = async (apiCall, maxRetries = 2, delay = 1000) => {\r\n  for (let attempt = 1; attempt <= maxRetries + 1; attempt++) {\r\n    try {\r\n      return await apiCall();\r\n    } catch (error) {\r\n      if (attempt > maxRetries) {\r\n        throw error;\r\n      }\r\n      \r\n      console.warn(`🔄 Attempt ${attempt} failed, retrying in ${delay}ms...`);\r\n      await new Promise(resolve => setTimeout(resolve, delay * attempt));\r\n    }\r\n  }\r\n};\r\n\r\n// Guest endpoints\r\nexport const getGuestDashboard = () => apiCallWithRetry(() => API.get('/guest/dashboard'));\r\nexport const searchReports = (query) => apiCallWithRetry(() => API.get(`/guest/search?query=${encodeURIComponent(query)}`));\r\n\r\n// Auth endpoints\r\nexport const login = (userData) => apiCallWithRetry(() => API.post('/auth/login', userData));\r\nexport const register = (userData) => apiCallWithRetry(() => API.post('/auth/register', userData));\r\nexport const logout = () => apiCallWithRetry(() => API.post('/auth/logout'));\r\n\r\n// Student endpoints with enhanced error handling\r\nexport const getStudentMonitoring = (studentId) => {\r\n  console.log('🎓 Fetching student monitoring for:', studentId);\r\n  return apiCallWithRetry(() => API.get(`/students/${studentId}/monitoring`));\r\n};\r\n\r\nexport const submitRating = (ratingData) => {\r\n  console.log('⭐ Submitting rating:', ratingData);\r\n  return apiCallWithRetry(() => API.post('/students/ratings', ratingData));\r\n};\r\n\r\nexport const getStudentRatings = (studentId) => {\r\n  console.log('📊 Fetching student ratings for:', studentId);\r\n  return apiCallWithRetry(() => API.get(`/students/${studentId}/ratings`));\r\n};\r\n\r\nexport const getStudentEnrollments = (studentId) => {\r\n  console.log('📚 Fetching student enrollments for:', studentId);\r\n  return apiCallWithRetry(() => API.get(`/students/${studentId}/enrollments`));\r\n};\r\n\r\n// Real-time functionality\r\nexport const subscribeToReports = (studentId, callback) => {\r\n  console.log('🔔 Setting up real-time subscription for student:', studentId);\r\n  \r\n  // WebSocket implementation\r\n  if (typeof WebSocket !== 'undefined') {\r\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n    const wsUrl = `${protocol}//${window.location.host}/ws/students/${studentId}/reports`;\r\n    const ws = new WebSocket(wsUrl);\r\n    \r\n    ws.onopen = () => {\r\n      console.log('✅ WebSocket connected for real-time updates');\r\n    };\r\n    \r\n    ws.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === 'new_report') {\r\n          callback(data.report);\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Error parsing WebSocket message:', error);\r\n      }\r\n    };\r\n    \r\n    ws.onerror = (error) => {\r\n      console.error('❌ WebSocket error:', error);\r\n    };\r\n    \r\n    ws.onclose = () => {\r\n      console.log('🔌 WebSocket disconnected');\r\n    };\r\n    \r\n    return () => {\r\n      if (ws.readyState === WebSocket.OPEN) {\r\n        ws.close();\r\n      }\r\n    };\r\n  }\r\n  \r\n  // Fallback to Server-Sent Events\r\n  const eventSource = new EventSource(`/api/students/${studentId}/reports/stream`);\r\n  \r\n  eventSource.onmessage = (event) => {\r\n    try {\r\n      const newReport = JSON.parse(event.data);\r\n      callback(newReport);\r\n    } catch (error) {\r\n      console.error('❌ Error parsing SSE data:', error);\r\n    }\r\n  };\r\n  \r\n  eventSource.onerror = (error) => {\r\n    console.error('❌ SSE error:', error);\r\n    eventSource.close();\r\n  };\r\n  \r\n  return () => eventSource.close();\r\n};\r\n\r\n// Lecturer endpoints\r\nexport const getLecturerClasses = (lecturerId) => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/classes`));\r\nexport const getLecturerReports = (lecturerId) => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/reports`));\r\nexport const submitReport = (reportData) => apiCallWithRetry(() => API.post('/lecturers/reports', reportData));\r\nexport const getLecturerMonitoring = (lecturerId) => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/monitoring`));\r\nexport const getLecturerRatings = (lecturerId) => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/ratings`));\r\nexport const getLecturerAssignedClasses = (lecturerId) => apiCallWithRetry(() => API.get(`/lecturers/${lecturerId}/assigned-classes`));\r\n\r\n// PRL endpoints\r\nexport const getPRLCourses = (prlId) => apiCallWithRetry(() => API.get(`/prl/${prlId}/courses`));\r\nexport const getPRLReports = (prlId) => apiCallWithRetry(() => API.get(`/prl/${prlId}/reports`));\r\nexport const addFeedback = (feedbackData) => apiCallWithRetry(() => API.post('/prl/feedback', feedbackData));\r\nexport const getPRLMonitoring = (prlId) => apiCallWithRetry(() => API.get(`/prl/${prlId}/monitoring`));\r\n\r\n// PL endpoints\r\nexport const getPLCourses = () => apiCallWithRetry(() => API.get('/pl/courses'));\r\nexport const addCourse = (courseData) => apiCallWithRetry(() => API.post('/pl/courses', courseData));\r\nexport const assignLecturer = (assignmentData) => apiCallWithRetry(() => API.post('/pl/assign-lecturer', assignmentData));\r\nexport const getPLReports = () => apiCallWithRetry(() => API.get('/pl/reports'));\r\nexport const getPLLecturers = () => apiCallWithRetry(() => API.get('/pl/lecturers'));\r\nexport const getPLClasses = () => apiCallWithRetry(() => API.get('/pl/classes'));\r\nexport const assignClassToLecturer = (assignmentData) => apiCallWithRetry(() => API.post('/pl/assign-class', assignmentData));\r\n\r\n// Enrollment endpoints\r\nexport const getAvailableClasses = () => apiCallWithRetry(() => API.get('/enrollments/available-classes'));\r\nexport const enrollStudent = (enrollmentData) => apiCallWithRetry(() => API.post('/enrollments/enroll', enrollmentData));\r\nexport const unenrollStudent = (enrollmentId) => apiCallWithRetry(() => API.delete(`/enrollments/${enrollmentId}`));\r\n\r\n// Utility functions\r\nexport const healthCheck = () => apiCallWithRetry(() => API.get('/health'));\r\n\r\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}