{"ast":null,"code":"import axios from'axios';const API=axios.create({baseURL:'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// Add request logging\nAPI.interceptors.request.use(config=>{var _config$method;console.log(\"API Request: \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" \").concat(config.url));const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Add response logging\nAPI.interceptors.response.use(response=>{console.log(\"API Response: \".concat(response.status),response.data);return response;},error=>{var _error$response,_error$response2;console.error(\"API Error: \".concat((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status),(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data);return Promise.reject(error);});// Add the missing functions here:\nexport const healthCheck=()=>{console.log('🏥 Checking API health...');return API.get('/health');};export const getAllCourses=()=>{console.log('📚 Fetching all courses...');return API.get('/courses');};// Your existing exports...\nexport const getGuestDashboard=()=>API.get('/guest/dashboard');export const searchReports=query=>API.get(\"/guest/search?query=\".concat(query));export const login=userData=>API.post('/auth/login',userData);export const register=userData=>API.post('/auth/register',userData);// Student endpoints\nexport const getStudentMonitoring=studentId=>{console.log('Fetching student monitoring for:',studentId);return API.get(\"/student/monitoring/\".concat(studentId));};export const submitRating=ratingData=>{console.log('Submitting rating:',ratingData);return API.post('/student/rating',ratingData);};export const getStudentRatings=studentId=>{console.log('Fetching student ratings for:',studentId);return API.get(\"/student/ratings/\".concat(studentId));};export const getStudentEnrollments=studentId=>{console.log('Fetching student enrollments for:',studentId);return API.get(\"/student/enrollments/\".concat(studentId));};// Lecturer endpoints\nexport const getLecturerClasses=lecturerId=>API.get(\"/lecturer/classes/\".concat(lecturerId));export const getLecturerReports=lecturerId=>API.get(\"/lecturer/reports/\".concat(lecturerId));export const submitReport=reportData=>API.post('/lecturer/reports',reportData);export const getLecturerMonitoring=lecturerId=>API.get(\"/lecturer/monitoring/\".concat(lecturerId));export const getLecturerRatings=lecturerId=>API.get(\"/lecturer/ratings/\".concat(lecturerId));export const getLecturerAssignedClasses=lecturerId=>API.get(\"/lecturer/assigned-classes/\".concat(lecturerId));// PRL endpoints\nexport const getPRLCourses=prlId=>API.get(\"/prl/courses/\".concat(prlId));export const getPRLReports=prlId=>API.get(\"/prl/reports/\".concat(prlId));export const addFeedback=feedbackData=>API.post('/prl/feedback',feedbackData);export const getPRLMonitoring=prlId=>API.get(\"/prl/monitoring/\".concat(prlId));// PL endpoints\nexport const getPLCourses=()=>API.get('/pl/courses');export const addCourse=courseData=>API.post('/pl/courses',courseData);export const assignLecturer=assignmentData=>API.post('/pl/assign-lecturer',assignmentData);// In services/api.js - Add this function if it doesn't exist\nexport const getPLReports=async programLeaderId=>{try{const response=await api.get(\"/program-leader/\".concat(programLeaderId,\"/reports\"));return response;}catch(error){throw error;}};export const getPLLecturers=()=>API.get('/pl/lecturers');export const getPLClasses=()=>API.get('/pl/classes');export const assignClassToLecturer=assignmentData=>API.post('/pl/assign-class',assignmentData);// Enrollment endpoints\nexport const getAvailableClasses=()=>API.get('/enrollments/available-classes');export const enrollStudent=enrollmentData=>API.post('/enrollments/enroll',enrollmentData);export const unenrollStudent=enrollmentId=>API.delete(\"/enrollments/enroll/\".concat(enrollmentId));export default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","concat","method","toUpperCase","url","token","localStorage","getItem","Authorization","response","status","data","error","_error$response","_error$response2","Promise","reject","healthCheck","get","getAllCourses","getGuestDashboard","searchReports","query","login","userData","post","register","getStudentMonitoring","studentId","submitRating","ratingData","getStudentRatings","getStudentEnrollments","getLecturerClasses","lecturerId","getLecturerReports","submitReport","reportData","getLecturerMonitoring","getLecturerRatings","getLecturerAssignedClasses","getPRLCourses","prlId","getPRLReports","addFeedback","feedbackData","getPRLMonitoring","getPLCourses","addCourse","courseData","assignLecturer","assignmentData","getPLReports","programLeaderId","api","getPLLecturers","getPLClasses","assignClassToLecturer","getAvailableClasses","enrollStudent","enrollmentData","unenrollStudent","enrollmentId","delete"],"sources":["C:/Users/USER/MPHOFE/lecturer-reporting-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ \r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request logging\r\nAPI.interceptors.request.use((config) => {\r\n  console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response logging\r\nAPI.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`API Response: ${response.status}`, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(`API Error: ${error.response?.status}`, error.response?.data);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add the missing functions here:\r\nexport const healthCheck = () => {\r\n  console.log('🏥 Checking API health...');\r\n  return API.get('/health');\r\n};\r\n\r\nexport const getAllCourses = () => {\r\n  console.log('📚 Fetching all courses...');\r\n  return API.get('/courses');\r\n};\r\n\r\n// Your existing exports...\r\nexport const getGuestDashboard = () => API.get('/guest/dashboard');\r\nexport const searchReports = (query) => API.get(`/guest/search?query=${query}`);\r\nexport const login = (userData) => API.post('/auth/login', userData);\r\nexport const register = (userData) => API.post('/auth/register', userData);\r\n\r\n// Student endpoints\r\nexport const getStudentMonitoring = (studentId) => {\r\n  console.log('Fetching student monitoring for:', studentId);\r\n  return API.get(`/student/monitoring/${studentId}`);\r\n};\r\nexport const submitRating = (ratingData) => {\r\n  console.log('Submitting rating:', ratingData);\r\n  return API.post('/student/rating', ratingData);\r\n};\r\nexport const getStudentRatings = (studentId) => {\r\n  console.log('Fetching student ratings for:', studentId);\r\n  return API.get(`/student/ratings/${studentId}`);\r\n};\r\nexport const getStudentEnrollments = (studentId) => {\r\n  console.log('Fetching student enrollments for:', studentId);\r\n  return API.get(`/student/enrollments/${studentId}`);\r\n};\r\n\r\n// Lecturer endpoints\r\nexport const getLecturerClasses = (lecturerId) => API.get(`/lecturer/classes/${lecturerId}`);\r\nexport const getLecturerReports = (lecturerId) => API.get(`/lecturer/reports/${lecturerId}`);\r\nexport const submitReport = (reportData) => API.post('/lecturer/reports', reportData);\r\nexport const getLecturerMonitoring = (lecturerId) => API.get(`/lecturer/monitoring/${lecturerId}`);\r\nexport const getLecturerRatings = (lecturerId) => API.get(`/lecturer/ratings/${lecturerId}`);\r\nexport const getLecturerAssignedClasses = (lecturerId) => API.get(`/lecturer/assigned-classes/${lecturerId}`);\r\n\r\n// PRL endpoints\r\nexport const getPRLCourses = (prlId) => API.get(`/prl/courses/${prlId}`);\r\nexport const getPRLReports = (prlId) => API.get(`/prl/reports/${prlId}`);\r\nexport const addFeedback = (feedbackData) => API.post('/prl/feedback', feedbackData);\r\nexport const getPRLMonitoring = (prlId) => API.get(`/prl/monitoring/${prlId}`);\r\n\r\n// PL endpoints\r\nexport const getPLCourses = () => API.get('/pl/courses');\r\nexport const addCourse = (courseData) => API.post('/pl/courses', courseData);\r\nexport const assignLecturer = (assignmentData) => API.post('/pl/assign-lecturer', assignmentData);\r\n\r\n// In services/api.js - Add this function if it doesn't exist\r\nexport const getPLReports = async (programLeaderId) => {\r\n  try {\r\n    const response = await api.get(`/program-leader/${programLeaderId}/reports`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\nexport const getPLLecturers = () => API.get('/pl/lecturers');\r\nexport const getPLClasses = () => API.get('/pl/classes');\r\nexport const assignClassToLecturer = (assignmentData) => API.post('/pl/assign-class', assignmentData);\r\n\r\n// Enrollment endpoints\r\nexport const getAvailableClasses = () => API.get('/enrollments/available-classes');\r\nexport const enrollStudent = (enrollmentData) => API.post('/enrollments/enroll', enrollmentData);\r\nexport const unenrollStudent = (enrollmentId) => API.delete(`/enrollments/enroll/${enrollmentId}`);\r\n\r\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}