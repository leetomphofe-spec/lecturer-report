{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getPLCourses}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Courses=_ref=>{let{user}=_ref;const[courses,setCourses]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{fetchCourses();},[]);const fetchCourses=async()=>{try{setError(null);setLoading(true);if(!user||!user.id){throw new Error('User information not available');}const response=await getPLCourses(user.id);// Handle different response structures\nif(response&&response.data){setCourses(response.data);}else if(Array.isArray(response)){setCourses(response);}else{throw new Error('Invalid response format from server');}}catch(error){console.error('Error fetching PL courses:',error);setError(error.message||'Failed to load courses');setCourses([]);// Reset courses on error\n}finally{setLoading(false);}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"text-center p-4\",children:\"Loading PL courses...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:[\"Error: \",error,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-outline-danger ms-3\",onClick:fetchCourses,children:\"Retry\"})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Program Leader Courses\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-primary\",children:[courses.length,\" courses\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:courses.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-4\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No courses found in your program.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:fetchCourses,children:\"Refresh\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Course Code\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Course Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Program\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:courses.map(course=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:course.course_code}),/*#__PURE__*/_jsx(\"td\",{children:course.course_name}),/*#__PURE__*/_jsx(\"td\",{children:course.program||course.stream||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:course.assigned_lecturer_id?/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-success\",children:\"Assigned\"}):/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-warning\",children:\"Not Assigned\"})})]},course.id||course.course_id))})]})})})]});};export default Courses;","map":{"version":3,"names":["React","useState","useEffect","getPLCourses","jsx","_jsx","jsxs","_jsxs","Courses","_ref","user","courses","setCourses","loading","setLoading","error","setError","fetchCourses","id","Error","response","data","Array","isArray","console","message","className","children","role","onClick","length","map","course","course_code","course_name","program","stream","assigned_lecturer_id","course_id"],"sources":["C:/Users/USER/MPHOFE/lecturer-reporting-system/frontend/src/components/prl/Courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getPLCourses } from '../../services/api';\r\n\r\nconst Courses = ({ user }) => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  const fetchCourses = async () => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      \r\n      if (!user || !user.id) {\r\n        throw new Error('User information not available');\r\n      }\r\n\r\n      const response = await getPLCourses(user.id);\r\n      \r\n      // Handle different response structures\r\n      if (response && response.data) {\r\n        setCourses(response.data);\r\n      } else if (Array.isArray(response)) {\r\n        setCourses(response);\r\n      } else {\r\n        throw new Error('Invalid response format from server');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching PL courses:', error);\r\n      setError(error.message || 'Failed to load courses');\r\n      setCourses([]); // Reset courses on error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center p-4\">Loading PL courses...</div>;\r\n  \r\n  if (error) return (\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n      Error: {error}\r\n      <button \r\n        className=\"btn btn-sm btn-outline-danger ms-3\"\r\n        onClick={fetchCourses}\r\n      >\r\n        Retry\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n        <h4>Program Leader Courses</h4>\r\n        <span className=\"badge bg-primary\">{courses.length} courses</span>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {courses.length === 0 ? (\r\n          <div className=\"text-center p-4\">\r\n            <p>No courses found in your program.</p>\r\n            <button \r\n              className=\"btn btn-primary\"\r\n              onClick={fetchCourses}\r\n            >\r\n              Refresh\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Course Code</th>\r\n                  <th>Course Name</th>\r\n                  <th>Program</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {courses.map((course) => (\r\n                  <tr key={course.id || course.course_id}>\r\n                    <td>{course.course_code}</td>\r\n                    <td>{course.course_name}</td>\r\n                    <td>{course.program || course.stream || 'N/A'}</td>\r\n                    <td>\r\n                      {course.assigned_lecturer_id ? (\r\n                        <span className=\"badge bg-success\">Assigned</span>\r\n                      ) : (\r\n                        <span className=\"badge bg-warning\">Not Assigned</span>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Courses;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}