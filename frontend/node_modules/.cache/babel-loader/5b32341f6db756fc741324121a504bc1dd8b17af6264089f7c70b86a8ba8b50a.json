{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\MPHOFE\\\\lecturer-reporting-system\\\\frontend\\\\src\\\\components\\\\lecturer\\\\Classes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getLecturerClasses } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Classes = ({\n  user\n}) => {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n  const fetchClasses = async () => {\n    try {\n      const response = await getLecturerClasses(user.id);\n      setClasses(response.data);\n    } catch (error) {\n      console.error('Error fetching classes:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading classes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"My Classes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: classes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No classes found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Class Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: classes.map((cls, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cls.class_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Classes, \"SMUtKqtTgi+qgcntJjq6bWjsXUM=\");\n_c = Classes;\nexport default Classes;\nvar _c;\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"names":["React","useState","useEffect","getLecturerClasses","jsxDEV","_jsxDEV","Classes","user","_s","classes","setClasses","loading","setLoading","fetchClasses","response","id","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","cls","index","class_name","_c","$RefreshReg$"],"sources":["C:/Users/USER/MPHOFE/lecturer-reporting-system/frontend/src/components/lecturer/Classes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getLecturerClasses } from '../../services/api';\r\n\r\nconst Classes = ({ user }) => {\r\n  const [classes, setClasses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchClasses();\r\n  }, []);\r\n\r\n  const fetchClasses = async () => {\r\n    try {\r\n      const response = await getLecturerClasses(user.id);\r\n      setClasses(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching classes:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading classes...</div>;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4>My Classes</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {classes.length === 0 ? (\r\n          <p>No classes found.</p>\r\n        ) : (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Class Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {classes.map((cls, index) => (\r\n                  <tr key={index}>\r\n                    <td>{cls.class_name}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Classes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,kBAAkB,CAACI,IAAI,CAACQ,EAAE,CAAC;MAClDL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE,oBAAON,OAAA;IAAAc,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEjD,oBACElB,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAL,QAAA,gBACnBd,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAL,QAAA,eAC1Bd,OAAA;QAAAc,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACNlB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAL,QAAA,EACvBV,OAAO,CAACgB,MAAM,KAAK,CAAC,gBACnBpB,OAAA;QAAAc,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAExBlB,OAAA;QAAKmB,SAAS,EAAC,kBAAkB;QAAAL,QAAA,eAC/Bd,OAAA;UAAOmB,SAAS,EAAC,qBAAqB;UAAAL,QAAA,gBACpCd,OAAA;YAAAc,QAAA,eACEd,OAAA;cAAAc,QAAA,eACEd,OAAA;gBAAAc,QAAA,EAAI;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRlB,OAAA;YAAAc,QAAA,EACGV,OAAO,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBvB,OAAA;cAAAc,QAAA,eACEd,OAAA;gBAAAc,QAAA,EAAKQ,GAAG,CAACE;cAAU;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC,GADlBK,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAlDIF,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAoDb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}