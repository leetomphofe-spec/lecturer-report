{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\MPHOFE\\\\lecturer-reporting-system\\\\frontend\\\\src\\\\components\\\\student\\\\Monitoring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getStudentMonitoring, getStudentEnrollments, getStudentRatings, subscribeToReports } from '../../services/api';\nimport './Student.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Monitoring = ({\n  user\n}) => {\n  _s();\n  var _enrollments$find;\n  const [reports, setReports] = useState([]);\n  const [enrollments, setEnrollments] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const navigate = useNavigate();\n\n  // Fetch all data\n  const fetchData = useCallback(async () => {\n    try {\n      setError('');\n      console.log('🔄 Fetching latest data for student:', user.id);\n      const [reportsRes, enrollmentsRes, ratingsRes] = await Promise.all([getStudentMonitoring(user.id), getStudentEnrollments(user.id), getStudentRatings(user.id)]);\n      const reportsData = reportsRes.data || reportsRes || [];\n      const enrollmentsData = enrollmentsRes.data || enrollmentsRes || [];\n      const ratingsData = ratingsRes.data || ratingsRes || [];\n      setReports(reportsData);\n      setEnrollments(enrollmentsData);\n      setRatings(ratingsData);\n      setLastUpdate(new Date());\n      console.log('✅ Data refreshed successfully');\n      console.log('   - Reports:', reportsData.length);\n      console.log('   - Enrollments:', enrollmentsData.length);\n      console.log('   - Ratings:', ratingsData.length);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('❌ Error fetching monitoring data:', error);\n      setError(`Failed to load data: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [user.id]);\n\n  // Initial data load\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Real-time subscription to new reports\n  useEffect(() => {\n    if (!(user !== null && user !== void 0 && user.id) || isSubscribed) return;\n    const setupRealTimeUpdates = async () => {\n      try {\n        console.log('🔔 Setting up real-time updates for student:', user.id);\n\n        // Method 1: WebSocket/Server-Sent Events\n        const unsubscribe = subscribeToReports(user.id, newReport => {\n          console.log('📨 New report received:', newReport);\n          setReports(prevReports => {\n            // Check if report already exists to avoid duplicates\n            const exists = prevReports.some(report => report.id === newReport.id);\n            if (!exists) {\n              console.log('🆕 Adding new report to list:', newReport.course_name);\n              return [newReport, ...prevReports];\n            }\n            return prevReports;\n          });\n          setLastUpdate(new Date());\n        });\n        setIsSubscribed(true);\n\n        // Cleanup subscription on unmount\n        return () => {\n          if (unsubscribe) unsubscribe();\n          setIsSubscribed(false);\n        };\n      } catch (error) {\n        console.error('❌ Error setting up real-time updates:', error);\n        // Fallback to polling if real-time fails\n        setupPolling();\n      }\n    };\n    setupRealTimeUpdates();\n  }, [user.id, isSubscribed]);\n\n  // Fallback: Polling for updates every 30 seconds\n  const setupPolling = useCallback(() => {\n    console.log('⏰ Setting up polling for updates every 30 seconds');\n    const pollInterval = setInterval(() => {\n      fetchData();\n    }, 30000); // 30 seconds\n\n    return () => clearInterval(pollInterval);\n  }, [fetchData]);\n\n  // Manual refresh with visual feedback\n  const handleManualRefresh = async () => {\n    setLoading(true);\n    await fetchData();\n  };\n\n  // Auto-refresh when component becomes visible (tab switch)\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        console.log('👀 Page became visible, refreshing data...');\n        fetchData();\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [fetchData]);\n\n  // Filter reports for enrolled courses only\n  const filteredReports = selectedCourse === 'all' ? reports.filter(report => enrollments.some(enrollment => enrollment.course_code === report.course_code)) : reports.filter(report => report.course_code === selectedCourse);\n\n  // Check if student has rated a report\n  const hasRatedReport = reportId => {\n    return ratings.some(rating => rating.report_id === reportId);\n  };\n  const getStudentRating = reportId => {\n    const rating = ratings.find(r => r.report_id === reportId);\n    return rating ? rating.rating_value : null;\n  };\n\n  // Navigate to rating page\n  const navigateToRating = reportId => {\n    navigate(`/student/rating?reportId=${reportId}`);\n  };\n\n  // Format time since last update\n  const getTimeSinceUpdate = () => {\n    const now = new Date();\n    const diffInSeconds = Math.floor((now - lastUpdate) / 1000);\n    if (diffInSeconds < 60) return 'just now';\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} min ago`;\n    return `${Math.floor(diffInSeconds / 3600)} hour${Math.floor(diffInSeconds / 3600) > 1 ? 's' : ''} ago`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-monitoring-container student-fade-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading your lecture reports...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Checking for new reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-monitoring-container student-fade-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-alert student-alert-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"\\u26A0\\uFE0F Unable to Load Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"guest-btn guest-btn-primary\",\n          onClick: handleManualRefresh,\n          children: \"\\uD83D\\uDD04 Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-monitoring-container student-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-monitoring-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-monitoring-title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCCA Live Lecture Reports Monitoring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"student-monitoring-subtitle\",\n          children: [\"Real-time updates when lecturers submit new reports\", isSubscribed && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"live-indicator\",\n            children: \" \\u25CF LIVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-monitoring-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-monitoring-stats\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"student-stat-badge\",\n            children: [filteredReports.length, \" reports \\u2022 Updated \", getTimeSinceUpdate()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"student-monitoring-select\",\n          value: selectedCourse,\n          onChange: e => setSelectedCourse(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"\\uD83D\\uDCDA All My Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), enrollments.map(enrollment => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: enrollment.course_code,\n            children: [enrollment.course_name, \" (\", enrollment.course_code, \")\"]\n          }, enrollment.course_code || enrollment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"student-monitoring-refresh\",\n          onClick: handleManualRefresh,\n          title: \"Refresh reports\",\n          disabled: loading,\n          children: loading ? '⏳' : '🔄'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-monitoring-content\",\n      children: filteredReports.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-monitoring-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCC8 Showing \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: filteredReports.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 28\n            }, this), \" report(s) for\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedCourse === 'all' ? 'all your courses' : (_enrollments$find = enrollments.find(e => e.course_code === selectedCourse)) === null || _enrollments$find === void 0 ? void 0 : _enrollments$find.course_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"student-monitoring-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Course\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Lecturer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date & Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Topic Covered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Attendance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Your Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredReports.map((report, index) => {\n                const attendanceRate = report.actual_students_present / report.total_students_registered;\n                const attendanceClass = attendanceRate > 0.7 ? 'high' : attendanceRate > 0.5 ? 'medium' : 'low';\n                const hasRated = hasRatedReport(report.id);\n                const studentRating = getStudentRating(report.id);\n                const isNewReport = index === 0 && Date.now() - new Date(report.created_at).getTime() < 300000; // 5 minutes\n\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: `student-report-row ${isNewReport ? 'new-report' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"student-course-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: report.course_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"student-course-code\",\n                        children: report.course_code\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"student-lecturer-info\",\n                    children: [\"\\uD83D\\uDC68\\u200D\\uD83C\\uDFEB \", report.lecturer_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"student-date-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: new Date(report.date_of_lecture).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: \"text-muted\",\n                      children: new Date(report.created_at).toLocaleTimeString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"student-topic-info\",\n                      title: report.topic_taught,\n                      children: [report.topic_taught, report.learning_outcomes && /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"text-muted d-block\",\n                        children: [report.learning_outcomes.substring(0, 50), \"...\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `student-attendance-badge ${attendanceClass}`,\n                      children: [report.actual_students_present, \"/\", report.total_students_registered, /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: [\"(\", Math.round(attendanceRate * 100), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"student-rating-info\",\n                    children: hasRated ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"student-rating-display\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"student-rating-stars\",\n                        children: '⭐'.repeat(studentRating)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"student-rating-value\",\n                        children: [\"(\", studentRating, \"/5)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"student-not-rated\",\n                      children: \"Not rated\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"student-actions\",\n                    children: hasRated ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"student-view-report-btn\",\n                      onClick: () => navigateToRating(report.id),\n                      children: \"\\uD83D\\uDCCB View\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"student-rate-btn\",\n                      onClick: () => navigateToRating(report.id),\n                      children: \"\\u2B50 Rate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"student-status\",\n                    children: isNewReport && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"new-indicator\",\n                      title: \"New report\",\n                      children: \"NEW\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 25\n                  }, this)]\n                }, report.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(Monitoring, \"NCbN7HZTw3PZ7gVFJOq7pG2pyX0=\", false, function () {\n  return [useNavigate];\n});\n_c = Monitoring;\nexport default Monitoring;\nvar _c;\n$RefreshReg$(_c, \"Monitoring\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","getStudentMonitoring","getStudentEnrollments","getStudentRatings","subscribeToReports","jsxDEV","_jsxDEV","Fragment","_Fragment","Monitoring","user","_s","_enrollments$find","reports","setReports","enrollments","setEnrollments","ratings","setRatings","selectedCourse","setSelectedCourse","loading","setLoading","error","setError","lastUpdate","setLastUpdate","Date","isSubscribed","setIsSubscribed","navigate","fetchData","console","log","id","reportsRes","enrollmentsRes","ratingsRes","Promise","all","reportsData","data","enrollmentsData","ratingsData","length","_error$response","_error$response$data","response","message","setupRealTimeUpdates","unsubscribe","newReport","prevReports","exists","some","report","course_name","setupPolling","pollInterval","setInterval","clearInterval","handleManualRefresh","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","filteredReports","filter","enrollment","course_code","hasRatedReport","reportId","rating","report_id","getStudentRating","find","r","rating_value","navigateToRating","getTimeSinceUpdate","now","diffInSeconds","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","map","title","disabled","index","attendanceRate","actual_students_present","total_students_registered","attendanceClass","hasRated","studentRating","isNewReport","created_at","getTime","lecturer_name","date_of_lecture","toLocaleDateString","toLocaleTimeString","topic_taught","learning_outcomes","substring","round","repeat","_c","$RefreshReg$"],"sources":["C:/Users/USER/MPHOFE/lecturer-reporting-system/frontend/src/components/student/Monitoring.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  getStudentMonitoring, \r\n  getStudentEnrollments, \r\n  getStudentRatings,\r\n  subscribeToReports \r\n} from '../../services/api';\r\nimport './Student.css';\r\n\r\nconst Monitoring = ({ user }) => {\r\n  const [reports, setReports] = useState([]);\r\n  const [enrollments, setEnrollments] = useState([]);\r\n  const [ratings, setRatings] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState('all');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [lastUpdate, setLastUpdate] = useState(new Date());\r\n  const [isSubscribed, setIsSubscribed] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch all data\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setError('');\r\n      \r\n      console.log('🔄 Fetching latest data for student:', user.id);\r\n      \r\n      const [reportsRes, enrollmentsRes, ratingsRes] = await Promise.all([\r\n        getStudentMonitoring(user.id),\r\n        getStudentEnrollments(user.id),\r\n        getStudentRatings(user.id)\r\n      ]);\r\n      \r\n      const reportsData = reportsRes.data || reportsRes || [];\r\n      const enrollmentsData = enrollmentsRes.data || enrollmentsRes || [];\r\n      const ratingsData = ratingsRes.data || ratingsRes || [];\r\n      \r\n      setReports(reportsData);\r\n      setEnrollments(enrollmentsData);\r\n      setRatings(ratingsData);\r\n      setLastUpdate(new Date());\r\n      \r\n      console.log('✅ Data refreshed successfully');\r\n      console.log('   - Reports:', reportsData.length);\r\n      console.log('   - Enrollments:', enrollmentsData.length);\r\n      console.log('   - Ratings:', ratingsData.length);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error fetching monitoring data:', error);\r\n      setError(`Failed to load data: ${error.response?.data?.message || error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user.id]);\r\n\r\n  // Initial data load\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // Real-time subscription to new reports\r\n  useEffect(() => {\r\n    if (!user?.id || isSubscribed) return;\r\n\r\n    const setupRealTimeUpdates = async () => {\r\n      try {\r\n        console.log('🔔 Setting up real-time updates for student:', user.id);\r\n        \r\n        // Method 1: WebSocket/Server-Sent Events\r\n        const unsubscribe = subscribeToReports(user.id, (newReport) => {\r\n          console.log('📨 New report received:', newReport);\r\n          \r\n          setReports(prevReports => {\r\n            // Check if report already exists to avoid duplicates\r\n            const exists = prevReports.some(report => report.id === newReport.id);\r\n            if (!exists) {\r\n              console.log('🆕 Adding new report to list:', newReport.course_name);\r\n              return [newReport, ...prevReports];\r\n            }\r\n            return prevReports;\r\n          });\r\n          \r\n          setLastUpdate(new Date());\r\n        });\r\n\r\n        setIsSubscribed(true);\r\n        \r\n        // Cleanup subscription on unmount\r\n        return () => {\r\n          if (unsubscribe) unsubscribe();\r\n          setIsSubscribed(false);\r\n        };\r\n        \r\n      } catch (error) {\r\n        console.error('❌ Error setting up real-time updates:', error);\r\n        // Fallback to polling if real-time fails\r\n        setupPolling();\r\n      }\r\n    };\r\n\r\n    setupRealTimeUpdates();\r\n  }, [user.id, isSubscribed]);\r\n\r\n  // Fallback: Polling for updates every 30 seconds\r\n  const setupPolling = useCallback(() => {\r\n    console.log('⏰ Setting up polling for updates every 30 seconds');\r\n    \r\n    const pollInterval = setInterval(() => {\r\n      fetchData();\r\n    }, 30000); // 30 seconds\r\n\r\n    return () => clearInterval(pollInterval);\r\n  }, [fetchData]);\r\n\r\n  // Manual refresh with visual feedback\r\n  const handleManualRefresh = async () => {\r\n    setLoading(true);\r\n    await fetchData();\r\n  };\r\n\r\n  // Auto-refresh when component becomes visible (tab switch)\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === 'visible') {\r\n        console.log('👀 Page became visible, refreshing data...');\r\n        fetchData();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n    };\r\n  }, [fetchData]);\r\n\r\n  // Filter reports for enrolled courses only\r\n  const filteredReports = selectedCourse === 'all' \r\n    ? reports.filter(report => \r\n        enrollments.some(enrollment => \r\n          enrollment.course_code === report.course_code\r\n        )\r\n      )\r\n    : reports.filter(report => report.course_code === selectedCourse);\r\n\r\n  // Check if student has rated a report\r\n  const hasRatedReport = (reportId) => {\r\n    return ratings.some(rating => rating.report_id === reportId);\r\n  };\r\n\r\n  const getStudentRating = (reportId) => {\r\n    const rating = ratings.find(r => r.report_id === reportId);\r\n    return rating ? rating.rating_value : null;\r\n  };\r\n\r\n  // Navigate to rating page\r\n  const navigateToRating = (reportId) => {\r\n    navigate(`/student/rating?reportId=${reportId}`);\r\n  };\r\n\r\n  // Format time since last update\r\n  const getTimeSinceUpdate = () => {\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now - lastUpdate) / 1000);\r\n    \r\n    if (diffInSeconds < 60) return 'just now';\r\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} min ago`;\r\n    return `${Math.floor(diffInSeconds / 3600)} hour${Math.floor(diffInSeconds / 3600) > 1 ? 's' : ''} ago`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"student-monitoring-container student-fade-in\">\r\n        <div className=\"student-loading\">\r\n          <div className=\"student-loading-spinner\"></div>\r\n          <p>Loading your lecture reports...</p>\r\n          <small>Checking for new reports</small>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"student-monitoring-container student-fade-in\">\r\n        <div className=\"student-alert student-alert-danger\">\r\n          <h5>⚠️ Unable to Load Reports</h5>\r\n          <p>{error}</p>\r\n          <button className=\"guest-btn guest-btn-primary\" onClick={handleManualRefresh}>\r\n            🔄 Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"student-monitoring-container student-fade-in\">\r\n      <div className=\"student-monitoring-header\">\r\n        <div className=\"student-monitoring-title-section\">\r\n          <h4>📊 Live Lecture Reports Monitoring</h4>\r\n          <p className=\"student-monitoring-subtitle\">\r\n            Real-time updates when lecturers submit new reports\r\n            {isSubscribed && <span className=\"live-indicator\"> ● LIVE</span>}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"student-monitoring-controls\">\r\n          <div className=\"student-monitoring-stats\">\r\n            <span className=\"student-stat-badge\">\r\n              {filteredReports.length} reports • Updated {getTimeSinceUpdate()}\r\n            </span>\r\n          </div>\r\n          \r\n          <select \r\n            className=\"student-monitoring-select\"\r\n            value={selectedCourse}\r\n            onChange={(e) => setSelectedCourse(e.target.value)}\r\n          >\r\n            <option value=\"all\">📚 All My Courses</option>\r\n            {enrollments.map((enrollment) => (\r\n              <option key={enrollment.course_code || enrollment.id} value={enrollment.course_code}>\r\n                {enrollment.course_name} ({enrollment.course_code})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          \r\n          <button \r\n            className=\"student-monitoring-refresh\"\r\n            onClick={handleManualRefresh}\r\n            title=\"Refresh reports\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? '⏳' : '🔄'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"student-monitoring-content\">\r\n        {/* ... (same empty states as before) ... */}\r\n        \r\n        {filteredReports.length > 0 && (\r\n          <>\r\n            <div className=\"student-monitoring-summary\">\r\n              <p>\r\n                📈 Showing <strong>{filteredReports.length}</strong> report(s) for{' '}\r\n                <strong>\r\n                  {selectedCourse === 'all' \r\n                    ? 'all your courses' \r\n                    : enrollments.find(e => e.course_code === selectedCourse)?.course_name\r\n                  }\r\n                </strong>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"student-table-container\">\r\n              <table className=\"student-monitoring-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Course</th>\r\n                    <th>Lecturer</th>\r\n                    <th>Date & Time</th>\r\n                    <th>Topic Covered</th>\r\n                    <th>Attendance</th>\r\n                    <th>Your Rating</th>\r\n                    <th>Actions</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {filteredReports.map((report, index) => {\r\n                    const attendanceRate = report.actual_students_present / report.total_students_registered;\r\n                    const attendanceClass = attendanceRate > 0.7 ? 'high' : attendanceRate > 0.5 ? 'medium' : 'low';\r\n                    const hasRated = hasRatedReport(report.id);\r\n                    const studentRating = getStudentRating(report.id);\r\n                    const isNewReport = index === 0 && Date.now() - new Date(report.created_at).getTime() < 300000; // 5 minutes\r\n                    \r\n                    return (\r\n                      <tr key={report.id} className={`student-report-row ${isNewReport ? 'new-report' : ''}`}>\r\n                        <td>\r\n                          <div className=\"student-course-info\">\r\n                            <strong>{report.course_name}</strong>\r\n                            <span className=\"student-course-code\">{report.course_code}</span>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"student-lecturer-info\">\r\n                          👨‍🏫 {report.lecturer_name}\r\n                        </td>\r\n                        <td className=\"student-date-info\">\r\n                          <div>\r\n                            {new Date(report.date_of_lecture).toLocaleDateString()}\r\n                          </div>\r\n                          <small className=\"text-muted\">\r\n                            {new Date(report.created_at).toLocaleTimeString()}\r\n                          </small>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"student-topic-info\" title={report.topic_taught}>\r\n                            {report.topic_taught}\r\n                            {report.learning_outcomes && (\r\n                              <small className=\"text-muted d-block\">\r\n                                {report.learning_outcomes.substring(0, 50)}...\r\n                              </small>\r\n                            )}\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <span className={`student-attendance-badge ${attendanceClass}`}>\r\n                            {report.actual_students_present}/{report.total_students_registered}\r\n                            <small>({Math.round(attendanceRate * 100)}%)</small>\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"student-rating-info\">\r\n                          {hasRated ? (\r\n                            <div className=\"student-rating-display\">\r\n                              <span className=\"student-rating-stars\">\r\n                                {'⭐'.repeat(studentRating)}\r\n                              </span>\r\n                              <span className=\"student-rating-value\">({studentRating}/5)</span>\r\n                            </div>\r\n                          ) : (\r\n                            <span className=\"student-not-rated\">Not rated</span>\r\n                          )}\r\n                        </td>\r\n                        <td className=\"student-actions\">\r\n                          {hasRated ? (\r\n                            <button \r\n                              className=\"student-view-report-btn\"\r\n                              onClick={() => navigateToRating(report.id)}\r\n                            >\r\n                              📋 View\r\n                            </button>\r\n                          ) : (\r\n                            <button \r\n                              className=\"student-rate-btn\"\r\n                              onClick={() => navigateToRating(report.id)}\r\n                            >\r\n                              ⭐ Rate\r\n                            </button>\r\n                          )}\r\n                        </td>\r\n                        <td className=\"student-status\">\r\n                          {isNewReport && (\r\n                            <span className=\"new-indicator\" title=\"New report\">\r\n                              NEW\r\n                            </span>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Monitoring;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}